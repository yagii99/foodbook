import 'dart:io';
import 'package:flutter/material.dart';
import 'package:foodbook/models/foods.dart';
import 'package:foodbook/screens/loading.dart';
import 'package:foodbook/services/database.dart';
import 'package:image_picker/image_picker.dart';

class AddFood extends StatefulWidget {
  @override
  _AddFoodState createState() => _AddFoodState();
}

class _AddFoodState extends State<AddFood> {
  final _formkey = GlobalKey<FormState>();
  String _currentname = '';
  String _currentingredients = '';
  String _currentrecipe = '';
  String _currentcalories = 'Not Specified';
  File _image;
  String imagemsg = '';
  final picker = ImagePicker();
  bool loading = false;
  void _imageFromGallery() async {
    PickedFile pickedimage = await ImagePicker().getImage(
      source: ImageSource.gallery,
      imageQuality: 50,
    );
    File image = File(pickedimage.path);
    setState(() {
      _image = image;
      imagemsg = image.path;
    });
  }

  @override
  Widget build(BuildContext context) {
    if (loading)
      return Loading();
    else
      return Form(
        key: _formkey,
        child: SingleChildScrollView(
          child: Container(
            decoration: BoxDecoration(
                image: DecorationImage(
                    image: AssetImage('assets/background.jpg'),
                    fit: BoxFit.cover)),
            child: Container(
              height: MediaQuery.of(context).size.height,
              padding: EdgeInsets.symmetric(
                vertical: MediaQuery.of(context).size.height * 0.02,
                horizontal: MediaQuery.of(context).size.height * 0.05,
              ),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  TextFormField(
                    validator: (val) =>
                        val.isEmpty ? 'please enter name' : null,
                    decoration: InputDecoration(hintText: 'Name of Food'),
                    onChanged: (val) {
                      setState(() {
                        _currentname = val;
                      });
                    },
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.02,
                  ),
                  TextFormField(
                    validator: (val) =>
                        val.isEmpty ? 'please enter Ingredients' : null,
                    decoration: InputDecoration(hintText: 'Ingredients'),
                    onChanged: (val) {
                      setState(() {
                        _currentingredients = val;
                      });
                    },
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.02,
                  ),
                  TextFormField(
                    decoration: InputDecoration(hintText: 'Calories'),
                    onChanged: (val) {
                      setState(() {
                        _currentcalories = val;
                      });
                    },
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.02,
                  ),
                  TextFormField(
                    keyboardType: TextInputType.multiline,
                    maxLines: 8,
                    validator: (val) =>
                        val.isEmpty ? 'please enter Recipe' : null,
                    decoration: InputDecoration(hintText: 'Recipe'),
                    onChanged: (val) {
                      setState(() {
                        _currentrecipe = val;
                      });
                    },
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.02,
                  ),
                  RaisedButton(
                      color: Colors.grey[400],
                      child: Text('Add photo'),
                      onPressed: () {
                        _imageFromGallery();
                      }),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.01,
                  ),
                  Text(imagemsg),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.01,
                  ),
                  RaisedButton(
                    child: Text('Add food'),
                    color: Colors.pink[400],
                    onPressed: () async {
                      if (_formkey.currentState.validate()) {
                        setState(() {
                          loading = true;
                        });
                        DatabaseService().updateUserfoods(Food(
                            name: _currentname,
                            ingredients: _currentingredients,
                            recipe: _currentrecipe,
                            calories: _currentcalories,
                            image: _image));
                        Navigator.popAndPushNamed(context, '/wrapper');
                      }
                    },
                  ),
                ],
              ),
            ),
          ),
        ),
      );
  }
}
