import 'package:flutter/material.dart';
import 'package:foodbook/shared/inputdecoration.dart';

class Calories extends StatefulWidget {
  @override
  _CaloriesState createState() => _CaloriesState();
}

class _CaloriesState extends State<Calories> {
  final List<String> _excerices = [
    '1: no exercice',
    '2: 1-3 days/week',
    '3: 3-5 days/week',
    '4: 6-7 days/week',
    '5: Extra Active'
  ];
  final Map _multiplier = {
    '1: no exercice': 1.2,
    '2: 1-3 days/week': 1.375,
    '3: 3-5 days/week': 1.55,
    '4: 6-7 days/week': 1.725,
    '5: Extra Active': 1.9
  };
  final List<String> _sex = ['Male', 'Female'];
  String _currentexercice = '1: no exercice';
  String _currentsex = 'Male';
  double _currentheight = 0;
  double _currentweight = 0;
  double _currentage = 0.0;
  String message = '';
  final _formkey = GlobalKey<FormState>();
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      extendBodyBehindAppBar: true,
      appBar: AppBar(
        iconTheme: IconThemeData(color: Colors.black),
        backgroundColor: Colors.transparent,
        title: Text(
          'Calories Calculator',
          style: TextStyle(
              color: Colors.black,
              fontFamily: 'mvboli',
              fontWeight: FontWeight.bold,
              fontSize: 20),
        ),
        elevation: 0,
        centerTitle: true,
      ),
      body: Form(
        key: _formkey,
        child: SingleChildScrollView(
          child: Container(
              height: MediaQuery.of(context).size.height,
              padding: EdgeInsets.symmetric(vertical: 20, horizontal: 50),
              decoration: BoxDecoration(
                  image: DecorationImage(
                      image: AssetImage('assets/background.jpg'),
                      fit: BoxFit.cover)),
              child: Column(
                children: [
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.08,
                  ),
                  Center(
                    child: Text('Calculate your daily calories need:',
                        style: TextStyle(
                            fontFamily: 'Lati', fontWeight: FontWeight.bold)),
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.02,
                  ),
                  TextFormField(
                    decoration:
                        textfieldecoration.copyWith(hintText: 'Your age'),
                    validator: (value) {
                      try {
                        _currentage = double.parse(value);
                        return null;
                      } catch (e) {
                        return 'enter a number';
                      }
                    },
                    onChanged: (val) {
                      _currentage = double.parse(val);
                    },
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.02,
                  ),
                  TextFormField(
                    decoration: textfieldecoration.copyWith(
                        hintText: 'Your height in cm'),
                    validator: (value) {
                      try {
                        _currentheight = double.parse(value);
                        return null;
                      } catch (e) {
                        return 'enter a number';
                      }
                    },
                    onChanged: (val) {
                      _currentheight = double.parse(val);
                    },
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.02,
                  ),
                  TextFormField(
                    decoration: textfieldecoration.copyWith(
                        hintText: 'Your weight in kg'),
                    validator: (value) {
                      try {
                        _currentweight = double.parse(value);
                        return null;
                      } catch (e) {
                        return 'enter a number';
                      }
                    },
                    onChanged: (val) {
                      _currentweight = double.parse(val);
                    },
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.02,
                  ),
                  Text('Your activities:',
                      style: TextStyle(
                          fontFamily: 'Lati', fontWeight: FontWeight.bold)),
                  DropdownButtonFormField(
                    value: _currentexercice ?? '1: no exercices',
                    decoration: InputDecoration(hintText: 'your activities'),
                    items: _excerices.map((e) {
                      return DropdownMenuItem(value: e, child: Text(e));
                    }).toList(),
                    onChanged: (val) {
                      _currentexercice = val;
                    },
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.01,
                  ),
                  Text('Your sex:',
                      style: TextStyle(
                          fontFamily: 'Lati', fontWeight: FontWeight.bold)),
                  DropdownButtonFormField(
                    value: _currentsex ?? 'Male',
                    decoration: InputDecoration(hintText: 'Your sex'),
                    items: _sex.map((e) {
                      return DropdownMenuItem(value: e, child: Text(e));
                    }).toList(),
                    onChanged: (val) => _currentsex = val,
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.06,
                  ),
                  Text(
                    message,
                    style: TextStyle(
                        fontFamily: 'Lato', fontWeight: FontWeight.bold),
                  ),
                  SizedBox(
                    height: MediaQuery.of(context).size.height * 0.06,
                  ),
                  RaisedButton(
                    onPressed: () {
                      if (_formkey.currentState.validate()) {
                        double cal = 0;
                        if (_currentsex == 'Male') {
                          cal = 66 +
                              6.3 * _currentweight * 2.20462 +
                              12.9 * _currentheight * 0.393701 -
                              6.8 * _currentage;
                          cal = cal * _multiplier[_currentexercice];
                        } else if (_currentsex == 'Female') {
                          cal = 655 +
                              4.3 * _currentweight * 2.20462 +
                              4.7 * _currentheight * 0.393701 -
                              4.7 * _currentage;
                          cal = cal * _multiplier[_currentexercice];
                        }
                        setState(() {
                          message =
                              'your daily calories is ${cal.toInt()} \n \n BMI= ${((10000 * _currentweight) / ((_currentheight * _currentheight))).toStringAsPrecision(5)}';
                        });
                      }
                    },
                    child: Text('Check'),
                  )
                ],
              )),
        ),
      ),
    );
  }
}
